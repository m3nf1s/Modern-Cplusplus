/*
 * В этой задаче вам нужно присваивать номера автобусным маршрутам.
 * 
 * А именно, для каждого маршрута, заданного множеством названий остановок, нужно либо выдать новый номер (первому маршруту — 1, второму — 2 и т. д.),
 * либо вернуть номер существующего маршрута, которому соответствует такое множество остановок.
 * 
 * В отличие от задачи «Автобусные остановки — 2», наборы остановок,
 * которые можно получить друг из друга перестановкой элементов или добавлением/удалением повторяющихся, следует считать одинаковыми.
 * 
 * Формат ввода
 * Сначала вводится количество запросов Q, затем Q описаний запросов.
 * 
 * Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом N названий остановок соответствующего маршрута (не обязательно различных).
 * Названия остановок состоят лишь из латинских букв и символов подчёркивания.
 * 
 * Формат вывода
 * Выведите ответ на каждый запрос в отдельной строке.
 * 
 * Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i, где i — номер маршрута с таким набором остановок.
 * В противном случае нужно выделить введённому набору остановок новый номер i и вывести его в формате New bus i.
 */

#include <iostream>
#include <set>
#include <string>
#include <map>

int main()
{
	std::map<std::set<std::string>, int> list_bus_stops;
	int command_count, number_route = 0;

	std::cin >> command_count;

	for (int i = 0; i < command_count; ++i)
	{
		int stops_count;
		std::set<std::string> stops;

		std::cin >> stops_count;

		for (int j = 0; j < stops_count; ++j)
		{
			std::string stop_name;
			std::cin >> stop_name;

			stops.insert(stop_name);
		}

		if(list_bus_stops.count(stops) == 1)
		{
			std::cout << "Already exists for " << list_bus_stops[stops] << std::endl;
		}
		else
		{
			list_bus_stops[stops] = ++number_route;
			std::cout << "New bus " << number_route << std::endl;
		}

		stops.clear();
	}
}