// Task_14.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

/*В этой задаче вам нужно присваивать номера автобусным маршрутам.
 *
 *А именно, для каждого маршрута, заданного набором названий остановок, нужно либо выдать новый номер (первому маршруту — 1, второму — 2 и т. д.),
 *либо вернуть номер существующего маршрута, которому соответствует такой набор остановок.
 *
 *Наборы остановок, полученные друг из друга перестановкой остановок, считаются различными (см. пример).
 *
 *Указание
 *В C++ ключом словаря может быть не только число или строка, но и другой контейнер, например, vector.
 *
 *Формат ввода
 *Сначала вводится количество запросов Q, затем Q описаний запросов.
 *
 *Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом N различных названий остановок соответствующего маршрута.
 *Названия остановок состоят лишь из латинских букв и символов подчёркивания.
 *
 *Формат вывода
 *Выведите ответ на каждый запрос в отдельной строке.
 *
 *Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i, где i — номер маршрута с таким набором остановок.
 *В противном случае нужно выделить введённому набору остановок новый номер i и вывести его в формате New bus i.*/
#include "pch.h"
#include <iostream>
#include <map>
#include <vector>
#include <string>

int main()
{
	std::map<std::vector<std::string>, int> number_bus_routes;
	int command_count, number_route = 0;

	std::cin >> command_count;

	for (int i = 0; i < command_count; i++)
	{
		int stops_count = 0;

		std::vector<std::string> stops;

		std::cin >> stops_count;

		for (int j = 0; j < stops_count; j++)
		{
			std::string stop_name;
			std::cin >> stop_name;

			stops.push_back(stop_name);
		}

		if (number_bus_routes.count(stops) == 0)
		{
			number_bus_routes[stops] = ++number_route;
			std::cout << "New bus " << number_bus_routes[stops] << std::endl;

		}		
		else
		{
			std::cout << "Already exists for " << number_bus_routes[stops] << std::endl;
		}

		stops.clear();
	}

	return 0;
}